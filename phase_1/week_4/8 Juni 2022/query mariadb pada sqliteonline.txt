SELECT founded_at, 
	str_to_date(founded_at, '%m/%d/%y') as Converted,
	founded_at_clean,
    convert(founded_at_clean, DAte)
FROM crunchbase_companies_clean_data
order BY founded_at;

select founded_at, 
	founded_at_clean
from crunchbase_companies_clean_data;

alter table crunchbase_companies_clean_data
add column cleaned_founded_at Date;

update crunchbase_companies_clean_data 
set cleaned_founded_at = STR_TO_DATE(founded_at, '%m/%d/%y');

alter table crunchbase_companies_clean_data
drop column founded_at;

select cleaned_founded_at,
	COALESCE(cleaned_founded_at, 'no date')
from crunchbase_companies_clean_data;

-------------------------------------------------------------------------

SELECT start_time,
	left(start_time, 10) as date,
    right(start_time, 8) as time,
    SUBSTR(start_time, 6, 2) as Month
FROM dc_bikeshare_q1_2012;

select bike_number, 
	TRIM(leading 'W0' from bike_number),
    POSITION('1' in bike_number) as position
from dc_bikeshare_q1_2012;

select start_station,
	start_terminal,
    LOWER(start_station) as lower,
    UPPER(start_station) as uppered,
    concat(start_terminal, ' - ', start_station)
from dc_bikeshare_q1_2012;

select duration_seconds,
	,
    start_time,
    sum(duration_seconds) OVER(Order by start_time) as run_time
from dc_bikeshare_q1_2012;


select start_terminal,
	start_time,
    sum(duration_seconds) OVER(PARTITION by start_terminal Order by start_time) as run_time,
    count(duration_seconds) OVER(PARTITION by start_terminal Order by start_time) as run_count,
    avg(duration_seconds) OVER(PARTITION by start_terminal Order by start_time) as run_avg
from dc_bikeshare_q1_2012;


select start_terminal,
	start_time,
    duration_seconds,
    ROW_NUMBER() OVER(PARTITION by start_terminal Order by start_time) as NUMBER
from dc_bikeshare_q1_2012;



select start_terminal,
	start_time,
    sum(duration_seconds) as run_sum,
    count(duration_seconds) as run_count,
    avg(duration_seconds) as run_avg
from dc_bikeshare_q1_2012
group by start_terminal;

select start_terminal,
	start_time,
    duration_seconds,
    sum(duration_seconds) OVER(PARTITION by start_terminal Order by start_time) as run_time,
    count(duration_seconds) OVER(PARTITION by start_terminal Order by start_time) as run_count,
    avg(duration_seconds
        
select start_terminal,
    duration_seconds,
    NTILE(4) OVER(PARTITION by start_terminal Order by duration_seconds) as quartile,
    NTILE(5) OVER(PARTITION by start_terminal Order by duration_seconds) as quantile
from dc_bikeshare_q1_2012;
        
        
select start_terminal,
    duration_seconds,
    LAG(duration_seconds, 1) OVER(PARTITION by start_terminal Order by duration_seconds) as LAG,
    LEAD(duration_seconds, 1) OVER(PARTITION by start_terminal Order by duration_seconds) as LEAD,
    duration_seconds - LAG(duration_seconds, 1)
        OVER(partition by start_terminal order by duration_seconds) as difference_1_lag
from dc_bikeshare_q1_2012;
        
        
	